version: '2.1'

services:

  # ------------------------------------------------------------
  # PHP
  # ------------------------------------------------------------
  php:
    image: devilbox/php-fpm:${PHP_SERVER}-work-0.94
    hostname: php

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP/HHVM container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_COMPOSE_ENTRYPOINT}
      - DEBUG_COMPOSE_ENTRYPOINT
      - DOCKER_LOGS

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

      ##
      ## Mail-catching
      ##
      - ENABLE_MAIL=1

      ##
      ## Enable 127.0.0.1 Port-forwarding
      ##
      - FORWARD_PORTS_TO_LOCALHOST=80:httpd:80,443:httpd:443,3306:mysql:3306,6379:redis:6379,11211:memcd:11211,9200:elastic:9200

      ##
      ## MySQL Backups
      ##
      - MYSQL_BACKUP_USER=root
      - MYSQL_BACKUP_PASS=${MYSQL_ROOT_PASSWORD}
      - MYSQL_BACKUP_HOST=mysql

    dns:
      - 172.16.238.100

    # MacOS and Windows have this by default, this hack also allows it for Linux
    extra_hosts:
      docker.for.lin.host.internal: 172.16.238.1
      docker.for.lin.localhost: 172.16.238.1

    networks:
      app_net:
        ipv4_address: 172.16.238.10

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${DEVILBOX_PATH}/.devilbox/www:/var/www/default:ro${MOUNT_OPTIONS}

      # Mount custom mass virtual hosting
      - ${HOST_PATH_HTTPD_DATADIR}:/shared/httpd:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${DEVILBOX_PATH}/log/php-fpm-${PHP_SERVER}:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount Mail directory
      - devilbox-mail:/var/mail:rw${MOUNT_OPTIONS}

      # Mount DB Backup directory
      - ${DEVILBOX_PATH}/backups:/shared/backups:rw${MOUNT_OPTIONS}

      # Mount devilbox user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${DEVILBOX_PATH}/cfg/php-ini-${PHP_SERVER}:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount devilbox user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${DEVILBOX_PATH}/cfg/php-fpm-${PHP_SERVER}:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount devilbox user-defined *.so files in order
      # to load custom PHP modules
      - ${DEVILBOX_PATH}/mod/php-fpm-${PHP_SERVER}:/usr/lib64/php/custom-modules:ro${MOUNT_OPTIONS}

      # Mount devilbox user-defined PHP-FPM startup *.sh scripts
      - ${DEVILBOX_PATH}/cfg/php-startup-${PHP_SERVER}:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${DEVILBOX_PATH}/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

      # Mount devilbox user-defined bash config
      - ${DEVILBOX_PATH}/bash:/etc/bashrc-devilbox.d:rw${MOUNT_OPTIONS}

      # Certificate Authority public key
      - ${DEVILBOX_PATH}/ca:/ca:rw${MOUNT_OPTIONS}

      # Pasta de m√≥dulos locais
      - ${DEVILBOX_PATH}/data/modulos:/shared/modulos:rw${MOUNT_OPTIONS}

      # Cache composer
      - devilbox-composer:/home/devilbox/.composer:rw${MOUNT_OPTIONS}

    depends_on:
      - bind

  # -----------------------------------------------------------------------------------------------
  # ELK Stack
  # -----------------------------------------------------------------------------------------------
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELK_SERVER:-6.6.1}
    hostname: elastic
    ports:
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_ELK_ELASTIC:-9200}:9200"
    networks:
      app_net:
        ipv4_address: 172.16.238.240
    environment:
      - TZ=${TIMEZONE:-UTC}
      - discovery.type=single-node
    volumes:
      - devilbox-elastic:/usr/share/elasticsearch/data
    command:
      - sh
      - -c
      - "./bin/elasticsearch-plugin list | grep -q analysis-phonetic
          || yes | ./bin/elasticsearch-plugin install --silent analysis-phonetic;
          ./bin/elasticsearch-plugin list | grep -q analysis-icu
          || yes | ./bin/elasticsearch-plugin install --silent analysis-icu;
         /usr/local/bin/docker-entrypoint.sh elasticsearch"

#  logstash:
#    image: docker.elastic.co/logstash/logstash-oss:${ELK_SERVER:-6.6.1}
#    hostname: logstash
#    ports:
#      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_ELK_LOGSTASH:-9600}:9600"
#    networks:
#      app_net:
#        ipv4_address: 172.16.238.241
#    environment:
#      - TZ=${TIMEZONE:-UTC}
#      - LOG_LEVEL=info
#      - HTTP_HOST=0.0.0.0
#      - HTTP_PORT=9600
#      - CONFIG_RELOAD_AUTOMATIC=true
#      - CONFIG_RELOAD_INTERVAL=300
#      - DB_HOST=DATABASE-SERVER
#    volumes:
#      - devilbox-logstash:/var/lib/logstash
#    depends_on:
#      - elastic
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana-oss:${ELK_SERVER:-6.6.1}
#    hostname: kibana
#    ports:
#      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_ELK_KIBANA:-5601}:5601"
#    networks:
#      app_net:
#        ipv4_address: 172.16.238.242
#    environment:
#      - TZ=${TIMEZONE:-UTC}
#      - ELASTICSEARCH_URL=http://elastic:9200
#    depends_on:
#      - elastic
  ngrok:
    image: devilbox/ngrok:0.3
    hostname: ngrok
    environment:
      - HTTP_TUNNELS=${NGROK_HTTP_TUNNELS:-httpd:httpd:80}
      - AUTHTOKEN=${NGROK_AUTHTOKEN:-}
      - REGION=${NGROK_REGION:-us}
    ports:
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_NGROK:-4040}:4040"
    networks:
      app_net:
        ipv4_address: 172.16.238.202
    depends_on:
      - bind
      - php
      - httpd

volumes:
  devilbox-elastic:
#  devilbox-logstash:
